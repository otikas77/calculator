{"version":3,"sources":["components/TextInput/TextInput.js","components/DailyQuantity/DailyQuantity.js","components/Result/Result.js","components/Button/Button.js","components/Inputs/Input.js","components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["TextInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","width","react_default","a","createElement","className","type","value","style","Component","DailyQuantity","text","Result","result","components_TextInput_TextInput","components_DailyQuantity_DailyQuantity","Button","Coeficient","WeightCoeficient","HeightCoeficient","AgeCoeficient","LifeStyle","Aim","data-Coeficient","data-WeightCoeficient","data-HeightCoeficient","data-AgeCoeficient","data-LifeStyle","data-Aim","Input","event","setState","target","onChange","handleChange","bind","Main","components_Button_Button","components_Inputs_Input","App","BasicValue","WeightСoefficient","Weight","HeightСoefficient","Height","AgeСoefficient","Age","components_Result_Result","components_Main_Main","class","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd0ee7da.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./TextInput.css\"\r\n\r\nclass TextInput extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: props.name,\r\n      width: props.width\r\n    };\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <input className=\"input\" type=\"text\" value={this.state.name} style={{width: this.state.width}}></input>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default TextInput;\r\n","import React, {Component} from \"react\";\r\nimport \"./DailyQuantity.css\"\r\n\r\nclass DailyQuantity extends Component{\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      text: props.text,\r\n      value: props.value\r\n    }\r\n  }\r\n  render(){\r\n    return(\r\n      <div>\r\n        <input value={this.state.value}></input>\r\n        <p>{this.state.text}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default DailyQuantity;\r\n","import React, { Component } from 'react';\r\nimport \"./Result.css\"\r\nimport TextInput from \"../TextInput/TextInput\"\r\nimport DailyQuantity from \"../DailyQuantity/DailyQuantity\"\r\n\r\nclass Result extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      result: props.result\r\n    }\r\n  }\r\n  render(){\r\n    return(\r\n      <div className='result'>\r\n        <div className=\"norm\">\r\n          <h4>Ваша норма: ккал в день</h4>\r\n          <TextInput name={this.state.result} width=\"90%\"/>\r\n        </div>\r\n        <div className=\"DailyQuantity\">\r\n            <h4>Денна кількість</h4>\r\n            <div className=\"DailyQuantity__wrapper\">\r\n              <DailyQuantity text=\"Білків, г.\" value=\"15\"/>\r\n              <DailyQuantity text=\"Жирів, г.\" value=\"20\"/>\r\n              <DailyQuantity text=\"Вугливодів, г.\" value=\"25\"/>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Result;\r\n","import React, {Component} from \"react\";\r\nimport \"./Button.css\"\r\n\r\nclass Button extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state={\r\n      width: props.width,\r\n      text: props.text,\r\n      Coeficient: props.Coeficient,\r\n      WeightCoeficient: props.WeightCoeficient,\r\n      HeightCoeficient: props.HeightCoeficient,\r\n      AgeCoeficient: props.AgeCoeficient,\r\n      LifeStyle: props.LifeStyle,\r\n      Aim: props.Aim\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <button\r\n        style={{width: this.state.width}}\r\n        data-Coeficient={this.state.Coeficient}\r\n        data-WeightCoeficient={this.state.WeightCoeficient}\r\n        data-HeightCoeficient={this.state.HeightCoeficient}\r\n        data-AgeCoeficient={this.state.AgeCoeficient}\r\n        data-LifeStyle={this.state.LifeStyle}\r\n        data-Aim={this.state.Aim}\r\n        >{this.state.text}</button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, {Component} from \"react\";\r\nimport \"./Input.css\";\r\n\r\nclass Input extends Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.state={\r\n      value:\"\"\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <input className=\"Inputs\" type=\"text\" value={this.state.value} onChange={this.handleChange.bind(this)}></input>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React, { Component } from 'react';\r\nimport \"./Main.css\"\r\nimport Button from \"../Button/Button\"\r\nimport Input from \"../Inputs/Input\"\r\n\r\nclass Main extends Component {\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div className='main'>\r\n        <div className=\"aim\">\r\n          <h4>Ваша ціль:</h4>\r\n          <div className=\"button__wrapper\">\r\n            <Button\r\n              width=\"30%\"\r\n              text=\"Схуднути\"\r\n              Aim = {0.2}\r\n              />\r\n            <Button\r\n              width=\"30%\"\r\n              text=\"Зберігти вагу\"\r\n              Aim = {1}/>\r\n            <Button\r\n              width=\"30%\"\r\n              text=\"Набрати вагу\"\r\n              Aim = {0.2} />\r\n          </div>\r\n          <h4>Ваша стать:</h4>\r\n            <div className=\"button__wrapper\">\r\n              <Button\r\n                width=\"45%\"\r\n                text=\"Чоловіча\"\r\n                Coeficient = {88.36}\r\n                WeightCoeficient = {13.4}\r\n                HeightCoeficient = {4.8}\r\n                AgeCoeficient = {5.7}\r\n                />\r\n              <Button\r\n                width=\"45%\"\r\n                text=\"Жіноча\"\r\n                Coeficient = {447.6}\r\n                WeightCoeficient = {9.2}\r\n                HeightCoeficient = {3.1}\r\n                AgeCoeficient = {4.3}\r\n                />\r\n            </div>\r\n          <div className=\"Input__data\">\r\n            <div className=\"Input__data__wrapper\">\r\n                <h4>Ваш вік (Років):</h4>\r\n                <Input/>\r\n            </div>\r\n            <div className=\"Input__data__wrapper\">\r\n                <h4>Ріст (см):</h4>\r\n                <Input/>\r\n            </div>\r\n            <div className=\"Input__data__wrapper\">\r\n                <h4>Вага (кг):</h4>\r\n                <Input/>\r\n            </div>\r\n          </div>\r\n          <h4>Ваша стиль життя:</h4>\r\n            <div className=\"button__wrapper\">\r\n              <Button width=\"300px\" text=\"Сидячий образ життя\" LifeStyle={1.2}/>\r\n              <Button width=\"300px\" text=\"Помірна активність\" LifeStyle={1.375}/>\r\n              <Button width=\"300px\" text=\"Середня активність\" LifeStyle={1.55}/>\r\n              <Button width=\"300px\" text=\"Активна людина\" LifeStyle={1.725}/>\r\n              <Button width=\"300px\" text=\"Екстремальна активність\" LifeStyle={1.9}/>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Result from \"./components/Result/Result\"\nimport Main from \"./components/Main/Main\"\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state={\n      BasicValue: 88.36,\n      WeightСoefficient: 13.4,\n      Weight: 1,\n      HeightСoefficient: 4.8,\n      Height: 1,\n      AgeСoefficient: 5.7,\n      Age: 1\n    }\n\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n          <div className=\"calculator__wrapper\">\n              <Result result={this.state.BasicValue+(this.state.WeightСoefficient*1)+(this.state.HeightСoefficient*this.state.Height)-(this.state.AgeСoefficient*this.state.Age)} />\n              <Main />\n              <p class='small'>\n                <small>*Денна норма калорій розрахована за формулою Харріса-Бенедикта</small>\n              </p>\n          </div>\n      </div>\n    );\n  }}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}